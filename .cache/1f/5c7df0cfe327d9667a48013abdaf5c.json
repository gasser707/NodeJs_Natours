{"id":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","dependencies":[{"name":"D:\\OneDrive - Concordia University - Canada\\webdev course\\NodeJs\\start\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1597892474745},{"name":"D:\\OneDrive - Concordia University - Canada\\webdev course\\NodeJs\\start\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\ecdsa-sig-formatter\\package.json","includedInParent":true,"mtime":1596924203058}],"generated":{"js":"'use strict';\r\n\r\nfunction getParamSize(keySize) {\r\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\r\n\treturn result;\r\n}\r\n\r\nvar paramBytesForAlg = {\r\n\tES256: getParamSize(256),\r\n\tES384: getParamSize(384),\r\n\tES512: getParamSize(521)\r\n};\r\n\r\nfunction getParamBytesForAlg(alg) {\r\n\tvar paramBytes = paramBytesForAlg[alg];\r\n\tif (paramBytes) {\r\n\t\treturn paramBytes;\r\n\t}\r\n\r\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\r\n}\r\n\r\nmodule.exports = getParamBytesForAlg;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js":"'use strict';\r\n\r\nfunction getParamSize(keySize) {\r\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\r\n\treturn result;\r\n}\r\n\r\nvar paramBytesForAlg = {\r\n\tES256: getParamSize(256),\r\n\tES384: getParamSize(384),\r\n\tES512: getParamSize(521)\r\n};\r\n\r\nfunction getParamBytesForAlg(alg) {\r\n\tvar paramBytes = paramBytesForAlg[alg];\r\n\tif (paramBytes) {\r\n\t\treturn paramBytes;\r\n\t}\r\n\r\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\r\n}\r\n\r\nmodule.exports = getParamBytesForAlg;\r\n"},"lineCount":24}},"error":null,"hash":"f8a0acb37bc0640b0b328e6ba09bf62c","cacheData":{"env":{}}}